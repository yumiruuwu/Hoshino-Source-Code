const { SlashCommandBuilder } = require('@discordjs/builders');
const { MessageEmbed, MessageActionRow, MessageSelectMenu } = require('discord.js');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('help')
        .setDescription('C·∫ßn gi√∫p ƒë·ª°?'),
    async execute (client, interaction) {
        const row = new MessageActionRow()
        .addComponents(
            new MessageSelectMenu()
                .setCustomId('select')
                .setPlaceholder('Ch·ªçn m·ª•c m√† b·∫°n mu·ªën xem')
                .addOptions([
                    {
                        label: 'Moderation',
                        description: 'Xem l·ªánh qu·∫£n l√Ω.',
                        value: 'mod',
                        emoji: '‚öí',
                    },
                    {
                        label: 'Utility',
                        description: 'Xem l·ªánh ti·ªán √≠ch.',
                        value: 'utility',
                        emoji: 'üé¨',
                    },
                    {
                        label: 'Coming soon...',
                        description: 'PlaceHolder#1',
                        value: 'soon',
                        emoji: '‚è±',
                    },
                    {
                        label: 'K·∫øt th√∫c ti·∫øn tr√¨nh',
                        description: 'K·∫øt th√∫c l·ªánh.',
                        value: 'end',
                        emoji: '‚ùå',
                    },
                ]),
        );

        const mainEmbed = new MessageEmbed()
        .setTitle("B·∫°n c·∫ßn gi√∫p ƒë·ª°?")
        .setAuthor("Yurin", "https://i.imgur.com/P1y4meo.jpg")
        .setColor('RANDOM')
        .setDescription("- S·ª≠ d·ª•ng menu ch·ªçn ph√≠a d∆∞·ªõi ƒë·ªÉ ch·ªçn m·ª•c m√† b·∫°n mu·ªën.\n- L∆∞u √Ω: ƒê√¢y l√† danh s√°ch l·ªánh slash th√¥i nh√©, s·∫Øp t·ªõi m√¨nh s·∫Ω li·ªát k√™ l·ªánh prefix v√†o nh√©!")
        .setFooter("Thousand Interval")
        .setTimestamp()

        await interaction.reply({ embeds: [mainEmbed], components: [row] });

        const modEmbed = new MessageEmbed()
        .setTitle('Danh s√°ch l·ªánh Moderation')
        .setAuthor('Yurin', 'https://i.imgur.com/P1y4meo.jpg')
        .setColor('#FF0000')
        .setDescription('- D∆∞·ªõi ƒë√¢y l√† danh s√°ch l·ªánh v√† 1 s·ªë v·∫´n c√≥ th·ªÉ l·ªói do m·∫•y b·∫°n ngh·ªãch vcl .-.')
        .addFields(
            {name: 'mute', value: 'D√πng ƒë·ªÉ d√°n m·ªìm th√†nh vi√™n.'},
            {name: 'unmute', value: 'M·ªü kho√° m√µm th√†nh vi√™n.'},
            {name: 'ban', value: 'D√πng ƒë·ªÉ ƒë√° th√†nh vi√™n ra ƒë·∫£o kh·ªâ.'},
            {name: 'unban', value: 'D√πng ƒë·ªÉ g·ª° l·ªánh c·∫•m th√†nh vi√™n v√†o nh√†.'},
            {name: 'kick', value: 'D√πng ƒë·ªÉ ƒë√° th√†nh vi√™n ra kh·ªèi nh√†, ra ƒë·∫£o kh·ªâ l√† kh·ªèi v·ªÅ nh√† :).'},
            {name: 'warn', value: 'D√πng ƒë·ªÉ c·∫£nh c√°o th√†nh vi√™n.'},
            {name: 'removewarn', value: 'D√πng ƒë·ªÉ xo√° c·∫£nh c√°o nh·∫•t ƒë·ªãnh c·ªßa th√†nh vi√™n.'},
            {name: 'checkwarn', value: 'D√πng ƒë·ªÉ xem s·ªë l·∫ßn c·∫£nh c√°o c·ªßa th√†nh vi√™n.'},
            {name: 'clearwarn', value: 'D√πng ƒë·ªÉ xo√° to√†n b·ªô c·∫£nh c√°o c·ªßa th√†nh vi√™n.'},
            {name: 'clear', value: 'D√πng ƒë·ªÉ xo√° s·ªë l∆∞·ª£ng tin nh·∫Øn nh·∫•t ƒë·ªãnh.'}
        )
        .setFooter('Thousand Interval')

        const utilityEmbed = new MessageEmbed()
        .setTitle('Danh s√°ch l·ªánh ti·ªán √≠ch')
        .setAuthor('Yurin', 'https://i.imgur.com/P1y4meo.jpg')
        .setColor('#FFA500')
        .setDescription('- D∆∞·ªõi ƒë√¢y l√† danh s√°ch l·ªánh ti·ªán √≠ch v√† 1 s·ªë v·∫´n c√≥ th·ªÉ l·ªói do m·∫•y b·∫°n l√¨ vcl .-.')
        .addFields(
            {name: 'getbanner', value: 'D√πng ƒë·ªÉ l·∫•y bi·ªÉu ng·ªØ h·ªì s∆° c·ªßa th√†nh vi√™n trong Server.'},
            {name: 'ping', value: 'D√πng ƒë·ªÉ ki·ªÉm tra ƒë·ªô ph·∫£n h·ªìi c·ªßa bot.'},
            {name: 'avatar', value: 'D√πng ƒë·ªÉ xem ·∫£nh h·ªì s∆° c·ªßa ng∆∞·ªùi d√πng.'},
            {name: 'whois', value: 'D√πng ƒë·ªÉ xem th√¥ng tin th√†nh vi√™n.'},
            {name: 'serverinfo', value: 'D√πng ƒë·ªÉ xem th√¥ng tin Server.'},
            {name: 'activitystart', value: 'S·ª≠ d·ª•ng t√≠nh nƒÉng activites c·ªßa Discord, s·∫Øp t·ªõi t√≠nh nƒÉng n√†y s·∫Ω b·ªã xo√° b·ªè kh·ªèi bot v√¨ Discord s·∫Ω ph√°t h√†nh activities tr·ª±c ti·∫øp v√†o k√™nh Voice.'},
            {name: 'changelog', value: 'Xem s·ª± thay ƒë·ªïi c·ªßa bot qua c√°c phi√™n b·∫£n.'},
            {name: 'Coming soon', value: '...'}
        )
        .setFooter('Thousand Interval')

        client.on('interactionCreate', async interaction => {
            if (!interaction.isSelectMenu()) return;
            const value = interaction.values[0];
        
            if (value === 'mod') {
                await interaction.deferUpdate();
                await interaction.editReply({ embeds: [modEmbed], components: [row] });
            } else if (value === 'utility') {
                await interaction.deferUpdate();
                await interaction.editReply({ embeds: [utilityEmbed], components: [row] });
            } else if (value === 'soon') {
                await interaction.deferUpdate();
                await interaction.editReply({ content: 'S·∫Øp ra m·∫Øt', embeds: [], components: [row] });
            } else if (value === 'end') {
                //await interaction.deferUpdate();
                await interaction.update({ content: 'ƒê√£ k·∫øt th√∫c ti·∫øn tr√¨nh', embeds: [], components: [] });
            }
        });
    }
}
